
class Account
{
    private double balance = 100000;


    public double bal
    {
        get { return balance; }
        set { balance = value; }
    }
}
public class Operations
{
    Account i = new Account();
    string CustomerName;
    int AccountNumber;
    double withdraw, dep, totbal;

    public void Deposite()
    {
        Console.WriteLine("Enter Name of the depositor :");
        CustomerName = Console.ReadLine();
        Console.WriteLine("Enter Account Number  :");
        AccountNumber = Convert.ToInt32(Console.ReadLine());
        Console.WriteLine("Enter Deposit Amount :");
        dep = Convert.ToDouble(Console.ReadLine());
        totbal = i.bal + dep;

        Console.WriteLine("------------------------------\n");
        Console.WriteLine("Name of the depositor : " + CustomerName);
        Console.WriteLine("Account Number: " + AccountNumber);
        Console.WriteLine("Total Balance amount in the account  : " + totbal);

    }
    public void Withdraw()
    {
        Console.WriteLine("Enter Account Name :");
        CustomerName = Console.ReadLine();
        Console.WriteLine("Enter Account Number  :");
        AccountNumber = Convert.ToInt32(Console.ReadLine());
        Console.WriteLine("Enter Withdraw Amount :");
        withdraw = Convert.ToDouble(Console.ReadLine());
        if (withdraw <= i.bal)
        {
            totbal = i.bal - withdraw;
            Console.WriteLine("------------------------------\n");
            Console.WriteLine("Account Name : " + CustomerName);
            Console.WriteLine("Account Number: " + AccountNumber);
            Console.WriteLine("After Withdraw Amount balnace is : " + totbal);
        }
        else
            Console.WriteLine("\n\nWithdraw Ammount does not Exist your Account.");
    }
    internal delegate void Mydelegate();
class MainProgram
    {
        public static void Main(string[] args)
        {
            Operations acc = new Operations();
            Mydelegate deg = new Mydelegate(acc.Deposite);
            deg();
            deg += new Mydelegate(acc.Withdraw);
            deg();

            char agn;
            do
            {
              
                int num;
                Console.WriteLine("Please Select Any Function.");
                Console.WriteLine("\nPress 1 for Deposit an Amount. \nPress 2 for Withdraw an Amount.");
                num = Convert.ToInt32(Console.ReadLine());
                switch (num)
                {
                    case 1:
                        acc.Deposite();
                        break;
                    case 2:
                        acc.Withdraw();
                        break;
                    default:
                        Console.WriteLine("Invalid Selection!!!");
                        break;
                }
                Console.WriteLine("\nDo you want to continue this program? (y/n)");
                agn = Convert.ToChar(Console.ReadLine());

            } while (agn == 'y');

            Console.ReadKey();
        }
    
    
        }
    }

